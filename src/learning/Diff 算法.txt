一、 state 值的 异步处理：
由于可能存在多个 setState值得操作并且时间很短，造成额外的性能消耗，
所以为了性能考虑，将多个 setState 操作合并为一个操作；

二、虚拟 DOM的同级比较：
虚拟 DOM的同级比较，当最外层的 虚拟DOM结构是不一样的，那么立马结束比对操作，直接替换其内层 虚拟DOM为新的虚拟DOM；

三、key值算法（without keys And with keys）
比如：第一次循环 虚拟DOM给 每一项元素增加一个 key值做标记；
当虚拟 DOM发生改变时，如果发现 第二次的 key值与第一次的 key值一致，那么直接复用 第一次的元素（DOM），
如果不一致则替换掉第一次的元素；
